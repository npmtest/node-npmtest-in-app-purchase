{"/home/travis/build/npmtest/node-npmtest-in-app-purchase/test.js":"/* istanbul instrument in package npmtest_in_app_purchase */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/lib.npmtest_in_app_purchase.js":"/* istanbul instrument in package npmtest_in_app_purchase */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_in_app_purchase = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_in_app_purchase = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-in-app-purchase && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_in_app_purchase */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_in_app_purchase\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_in_app_purchase.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_in_app_purchase.rollup.js'] =\n            local.assetsDict['/assets.npmtest_in_app_purchase.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_in_app_purchase.__dirname + '/lib.npmtest_in_app_purchase.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/index.js":"var async = require('./lib/async');\n\nvar apple = require('./lib/apple');\nvar google = require('./lib/google');\nvar windows = require('./lib/windows');\nvar amazonManager = require('./lib/amazonManager');\nvar constants = require('./constants');\nvar verbose = require('./lib/verbose');\n\nvar amazon;\n\nmodule.exports.APPLE = constants.SERVICES.APPLE;\nmodule.exports.GOOGLE = constants.SERVICES.GOOGLE;\nmodule.exports.WINDOWS = constants.SERVICES.WINDOWS;\nmodule.exports.AMAZON = constants.SERVICES.AMAZON;\n\nmodule.exports.config = function (configIn) {\n\tapple.readConfig(configIn);\n\tgoogle.readConfig(configIn);\n\twindows.readConfig(configIn);\n\tamazon = amazonManager.create(configIn);\n\tverbose.setup(configIn);\n};\n\nmodule.exports.setup = function (cb) {\n\tasync.parallel([\n\t\tfunction (next) {\n\t\t\tapple.setup(next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tgoogle.setup(next);\n\t\t},\n\t\tfunction (next) {\n\t\t\tamazon.setup(next);\n\t\t}\n\t], cb);\n};\n\nmodule.exports.validate = function (service, receipt, cb) {\n\tswitch (service) {\n\t\tcase module.exports.APPLE:\n\t\t\tapple.validatePurchase(null, receipt, cb);\n\t\t\tbreak;\n\t\tcase module.exports.GOOGLE:\n\t\t\tgoogle.validatePurchase(null, receipt, cb);\n\t\t\tbreak;\n\t\tcase module.exports.WINDOWS:\n\t\t\twindows.validatePurchase(receipt, cb);\n\t\t\tbreak;\n\t\tcase module.exports.AMAZON:\n\t\t\tamazon.validatePurchase(null, receipt, cb);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn cb(new Error('invalid service given: ' + service));\n\t}\n};\n\nmodule.exports.validateOnce = function (service, secretOrPubKey, receipt, cb) {\n\t\n\tif (!secretOrPubKey && service !== module.exports.APPLE && service !== module.exports.WINDOWS) {\n\t\tverbose.log('<.validateOnce>', service, receipt);\n\t\treturn cb(new Error('missing secret or public key for dynamic validation:' + service));\n\t}\n\t\n\tswitch (service) {\n\t\tcase module.exports.APPLE:\n\t\t\tapple.validatePurchase(secretOrPubKey, receipt, cb);\n\t\t\tbreak;\n\t\tcase module.exports.GOOGLE:\n\t\t\tgoogle.validatePurchase(secretOrPubKey, receipt, cb);\n\t\t\tbreak;\n\t\tcase module.exports.WINDOWS:\n\t\t\twindows.validatePurchase(receipt, cb);\n\t\t\tbreak;\n\t\tcase module.exports.AMAZON:\n\t\t\tamazon.validatePurchase(secretOrPubKey, receipt, cb);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tverbose.log('<.validateOnce>', secretOrPubKey, receipt);\n\t\t\treturn cb(new Error('invalid service given: ' + service));\n\t}\n};\n\nmodule.exports.isValidated = function (response) {\n\tif (response && response.status === constants.VALIDATION.SUCCESS) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nmodule.exports.isExpired = function (purchasedItem) {\n\tif (!purchasedItem || !purchasedItem.transactionId) {\n\t\tthrow new Error('invalid purchased item given:\\n' + JSON.stringify(purchasedItem));\n\t}\n\tif (purchasedItem.cancellationDate) {\n\t\t// it has been cancelled\n\t\treturn true;\n\t}\n\tif (!purchasedItem.expirationDate) {\n\t\t// there is no exipiration date with this item\n\t\treturn false;\n\t}\n\tif (Date.now() - purchasedItem.expirationDate >= 0) {\n\t\treturn true;\n\t}\n\t// has not exipired yet\n\treturn false;\n};\n\nmodule.exports.getPurchaseData = function (purchaseData, options) {\n\tif (!purchaseData || !purchaseData.service) {\n\t\treturn null;\n\t}\n\tswitch (purchaseData.service) {\n\t\tcase module.exports.APPLE:\n\t\t\treturn apple.getPurchaseData(purchaseData, options);\n\t\tcase module.exports.GOOGLE:\n\t\t\treturn google.getPurchaseData(purchaseData, options);\n\t\tcase module.exports.WINDOWS:\n\t\t\treturn windows.getPurchaseData(purchaseData, options);\n\t\tcase module.exports.AMAZON:\n\t\t\treturn amazon.getPurchaseData(purchaseData, options);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nmodule.exports.refreshGoogleToken = function (cb) {\n\t\n\tgoogle.refreshToken(cb);\n\n};\n\n// test use only\nmodule.exports.reset = function () {\n\t// resets google setup\n\tgoogle.reset();\n};\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/async.js":"'use strict';\n\n// i am only doing this to minimize the risk of dependencies...\n\nmodule.exports.forEach = function (list, handler, done) {\n\t// counter of finished tasks\n\tvar counter = 0;\n\tvar len = list.length;\n\n\tif (!len) {\n\t\treturn done();\n\t}\n\n\tvar iterator = function (i, list, handler, done) {\n\t\tvar item = list[i];\n\t\thandler(item, function (error) {\n\t\t\tif (error) {\n\t\t\t\treturn done(error);\n\t\t\t}\n\t\t\tcounter += 1;\n\t\t\tif (counter === len) {\n\t\t\t\tdone();\n\t\t\t}\n\t\t});\n\t};\n\tfor (var i = 0; i < len; i++) {\n\t\titerator(i, list, handler, done);\n\t}\n};\n\nmodule.exports.each = module.exports.forEach;\n\nmodule.exports.eachSeries = function (list, handler, done) {\n\t\n\tif (!list.length) {\n\t\treturn done();\n\t}\n\n\titeratorSeries(0, list, handler, done);\n};\n\nmodule.exports.parallel = function (list, done) {\n\tvar counter = 0;\n\tvar len = list.length;\n\n\tdone = done || function () {};\n\n\tif (!len) {\n\t\treturn done();\n\t}\n\n\tvar iterator = function (i, list, done) {\n\t\tvar handler = list[i];\n\t\thandler(function (error) {\n\t\t\tif (error) {\n\t\t\t\treturn done(error);\n\t\t\t}\n\t\t\tcounter += 1;\n\t\t\tif (counter === len) {\n\t\t\t\tdone();\n\t\t\t}\n\t\t});\n\t};\n\tfor (var i = 0; i < len; i++) {\n\t\titerator(i, list, done);\n\t}\n};\n\nmodule.exports.series = function (list, done) {\n\t\n\tif (!list.length) {\n\t\treturn done();\n\t}\n\n\thandlerSeries(0, list, done);\n};\n\nfunction iteratorSeries(i, list, handler, done) {\n\tvar item = list[i];\n\thandler(item, function (error) {\n\t\tif (error) {\n\t\t\treturn done(error);\n\t\t}\n\t\ti += 1;\n\t\tif (i === list.length) {\n\t\t\treturn done();\n\t\t}\n\t\titeratorSeries(i, list, handler, done);\n\t});\n}\n\nfunction handlerSeries(i, list, done) {\n\tvar handler = list[i];\n\thandler(function (error) {\n\t\tif (error) {\n\t\t\treturn done(error);\n\t\t}\n\t\ti += 1;\n\t\tif (i === list.length) {\n\t\t\treturn done();\n\t\t}\n\t\thandlerSeries(i, list, done);\n\t});\n}\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/apple.js":"var async = require('./async');\nvar verbose = require('./verbose');\nvar constants = require('../constants');\nvar responseData = require('./responseData');\nvar request = require('request');\nvar errorMap = {\n\t21000: 'The App Store could not read the JSON object you provided.',\n\t21002: 'The data in the receipt-data property was malformed.',\n\t21003: 'The receipt could not be authenticated.',\n\t21004: 'The shared secret you provided does not match the shared secret on file for your account.',\n\t21005: 'The receipt server is not currently available.',\n\t21006: 'This receipt is valid but the subscription has expired. When this status code is returned to your server, the receipt data is also decoded and returned as part of the response.',\n\t21007: 'This receipt is a sandbox receipt, but it was sent to the production service for verification.',\n\t21008: 'This receipt is a production receipt, but it was sent to the sandbox service for verification.',\n\t2: 'The receipt is valid, but purchased nothing.'\n};\nvar REC_KEYS = {\n\tIN_APP: 'in_app',\n\tLRI: 'latest_receipt_info',\n\tBUNDLE_ID: 'bundle_id',\n\tTRANSACTION_ID: 'transaction_id',\n\tPRODUCT_ID: 'product_id',\n\tORIGINAL_PURCHASE_DATE_MS: 'original_purchase_date_ms',\n\tEXPIRES_DATE_MS: 'expires_date_ms',\n\tEXPIRES_DATE: 'expires_date',\n\tCANCELLATION_DATE: 'cancellation_date',\n\tPURCHASE_DATE_MS: 'purchase_date_ms'\n};\nvar config = null;\nvar sandboxHost = 'sandbox.itunes.apple.com';\nvar liveHost = 'buy.itunes.apple.com';\nvar path = '/verifyReceipt';\n\nfunction isValidConfigKey(key) {\n\treturn key.match(/^apple/);\n}\n\nmodule.exports.readConfig = function (configIn) {\n\tif (!configIn) {\n\t\t// no apple iap or password not required\n\t\treturn;\n\t}\n\t\n\t// set up verbose logging\n\tverbose.setup(configIn);\n\t\n\tconfig = {};\n\tvar configValueSet = false;\n\t// Apply any default settings to Request.\n\tif ('requestDefaults' in configIn) {\n\t\trequest = request.defaults(configIn.requestDefaults);\n\t}\n\tObject.keys(configIn).forEach(function (key) {\n\t\tif (isValidConfigKey(key)) {\n\t\t\tconfig[key] = configIn[key];\n\t\t\tconfigValueSet = true;\n\t\t}\n\t});\n\n\tif (!configValueSet) {\n\t\tconfig = null;\n\t}\n};\n\nmodule.exports.setup = function (cb) {\n\tif (!config || !config.applePassword) {\n\n\t\tif (process.env.APPLE_IAP_PASSWORD) {\n\t\t\tconfig = config || {};\n\t\t\tconfig.applePassword = process.env.APPLE_IAP_PASSWORD;\n\t\t}\n\n\t}\n\n\treturn cb();\n};\n\nmodule.exports.validatePurchase = function (secret, receipt, cb) {\n\tvar prodPath = 'https://' + liveHost + path;\n\tvar sandboxPath = 'https://' + sandboxHost + path;\n\tvar status;\n\tvar validatedData;\n\tvar isValid = false;\n\tvar content = { 'receipt-data': receipt };\n\n\tif (config && config.applePassword) {\n\t\tcontent.password = config.applePassword;\n\t}\n\n\t// override applePassword from config to allow dynamically fed secret to validate\n\tif (secret) {\n\t\tverbose.log('<Apple> Using dynamic applePassword:', secret);\n\t\tcontent.password = secret;\n\t}\n\n\tverbose.log('<Apple> Validatation data:', content);\n\n\tvar tryProd = function (next) {\n\t\tverbose.log('<Apple> Try validate against production:', prodPath);\n\t\tsend(prodPath, content, function (error, res, data) {\n\t\t\tverbose.log('<Apple>', prodPath, 'validation response:', data);\n\t\t\t// request error\n\t\t\tif (error) {\n\t\t\t\t// 1 is unknown\n\t\t\t\tstatus = data ? data.status : 1;\n\t\t\t\tvalidatedData = {\n\t\t\t\t\tstatus: status,\n\t\t\t\t\tmessage: errorMap[status] || 'Unknown'\n\t\t\t\t};\n\t\t\t\tapplyResponseData(validatedData, data);\n\t\t\t\tverbose.log('<Apple>', prodPath, 'failed:', error, validatedData);\n\t\t\t\treturn next(error);\n\t\t\t}\n\t\t\t// apple responded with error\n\t\t\tif (data.status > 0 && data.status !== 21007 && data.status !== 21002) {\n\t\t\t\tverbose.log(prodPath, 'failed:', data);\n\t\t\t\tstatus = data.status;\n\t\t\t\tvar emsg = errorMap[status] || 'Unknown';\n\t\t\t\tvar err = new Error(emsg);\n\t\t\t\tvalidatedData = {\n\t\t\t\t\tstatus: status,\n\t\t\t\t\tmessage: emsg\n\t\t\t\t};\n\t\t\t\tapplyResponseData(validatedData, data);\n\t\t\t\tverbose.log('<Apple>', prodPath, 'failed:', validatedData);\n\t\t\t\treturn next(err);\t\t\n\t\t\t}\n\n\t\t\t// try sandbox...\n\t\t\tif (data.status === 21007 || data.status === 21002) {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\t// production validated\n\t\t\tvalidatedData = data;\n\t\t\tverbose.log('<Apple> Production validation successful:', validatedData);\n\t\t\tisValid = true;\n\t\t\tnext();\n\t\t});\n\t};\n\n\tvar trySandbox = function (next) {\n\t\tif (isValid) {\n\t\t\treturn next();\n\t\t}\n\t\tverbose.log('<Apple> Try validate against sandbox:', sandboxPath);\n\t\tsend(sandboxPath, content, function (error, res, data) {\n\t\t\tverbose.log('<Apple>', sandboxPath, 'validation response:', data);\n\t\t\tif (error) {\n\t\t\t\t// 1 is unknown\n\t\t\t\tstatus = data ? data.status : 1;\n\t\t\t\tvalidatedData = {\n\t\t\t\t\tstatus: status,\n\t\t\t\t\tmessage: errorMap[status] || 'Unknown'\n\t\t\t\t};\n\t\t\t\tapplyResponseData(validatedData, data);\n\t\t\t\tverbose.log('<Apple>', sandboxPath, 'failed:', error, validatedData);\n\t\t\t\treturn next(error);\n\t\t\t}\n\t\t\tif (data.status > 0) {\n\t\t\t\tverbose.log('<Apple>', sandboxPath, 'failed:', data);\n\t\t\t\tstatus = data.status;\n\t\t\t\tvar emsg = errorMap[status] || 'Unknown';\n\t\t\t\tvar err = new Error(emsg);\n\t\t\t\tvalidatedData = {\n\t\t\t\t\tstatus: status,\n\t\t\t\t\tmessage: emsg\n\t\t\t\t};\n\t\t\t\tapplyResponseData(validatedData, data);\n\t\t\t\tverbose.log('<Apple>', sandboxPath, 'failed:', validatedData);\n\t\t\t\treturn next(err);\t\t\n\t\t\t}\n\t\t\t// sandbox validated\n\t\t\tvalidatedData = data;\n\t\t\tverbose.log('<Apple> Sandbox validation successful:', validatedData);\n\t\t\tnext();\n\t\t});\n\t};\n\n\tvar done = function (error) {\n\t\tif (error) {\n\t\t\treturn cb(error, validatedData);\n\t\t}\n\t\thandleResponse(receipt, validatedData, cb);\n\t};\n\n\tvar tasks = [\n\t\ttryProd,\n\t\ttrySandbox\n\t];\n\tasync.series(tasks, done);\n};\n\nmodule.exports.getPurchaseData = function (purchase, options) {\n\tif (!purchase || !purchase.receipt) {\n\t\treturn null;\n\t}\n\tvar data = [];\n\tif (purchase.receipt[REC_KEYS.IN_APP]) {\n\t\t// iOS 6+\n\t\tvar tids = {};\n\t\tvar list = purchase.receipt[REC_KEYS.IN_APP];\n\t\tvar lri = purchase[REC_KEYS.LRI];\n\t\tif (lri && Array.isArray(lri)) {\n\t\t\tlist = list.concat(lri);\n\t\t}\n\t\tfor (var i = 0, len = list.length; i < len; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar tid = item['original_' + REC_KEYS.TRANSACTION_ID];\n\t\t\tvar pdate = parseInt(item[REC_KEYS.PURCHASE_DATE_MS], 10);\n\t\t\tvar exp = getSubscriptionExpireDate(item);\n\t\t\tvar index = data.length;\n\n\t\t\tif (options && options.ignoreExpired && exp && Date.now() - exp >= 0) {\n\t\t\t\t// we are told to ignore expired item and it is expired\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (tids[tid] && tids[tid].time < pdate) {\n\t\t\t\t// avoid duplicate and keep the latest\n\t\t\t\tindex = tids[tid].index;\n\t\t\t}\n\n\t\t\ttids[tid] = { time: pdate, index: data.length };\n\t\t\tdata[index] = responseData.parse(item);\n\t\t\tdata[index].bundleId = purchase.receipt[REC_KEYS.BUNDLE_ID];\n\t\t\tdata[index].expirationDate = exp;\n\t\t}\n\t\treturn data;\n\t}\n\t// old and will be deprecated by Apple\n\tdata.push({\n\t\tbundleId: purchase.receipt[REC_KEYS.BUNDLE_ID],\n\t\ttransactionId:  purchase.receipt[REC_KEYS.TRANSACTION_ID],\n\t\tproductId: purchase.receipt[REC_KEYS.PRODUCT_ID],\n\t\tpurchaseDate: purchase.receipt[REC_KEYS.ORIGINAL_PURCHASE_DATE_MS],\n\t\tquantity: parseInt(purchase.receipt.quantity, 10),\n\t\texpirationDate: getSubscriptionExpireDate(purchase)\n\t});\n\treturn data;\n};\n\nfunction getSubscriptionExpireDate(data) {\n\tif (data[REC_KEYS.EXPIRES_DATE_MS]) {\n\t\treturn parseInt(data[REC_KEYS.EXPIRES_DATE_MS], 10);\n\t}\n\tif (data[REC_KEYS.EXPIRES_DATE]) {\n\t\treturn parseInt(data[REC_KEYS.EXPIRES_DATE], 10);\n\t}\n\treturn 0;\n}\n\nfunction handleResponse(receipt, data, cb) {\n\tdata.service = constants.SERVICES.APPLE;\n\tif (data.status === constants.VALIDATION.SUCCESS) {\n\t\tif (data.receipt[REC_KEYS.IN_APP] && !data.receipt[REC_KEYS.IN_APP].length) {\n\t\t\t// receipt is valid, but the receipt bought nothing\n\t\t\t// probably hacked: https://forums.developer.apple.com/thread/8954\n\t\t\t// https://developer.apple.com/library/mac/technotes/tn2413/_index.html#//apple_ref/doc/uid/DTS40016228-CH1-RECEIPT-HOW_DO_I_USE_THE_CANCELLATION_DATE_FIELD_\n\t\t\tdata.status = constants.VALIDATION.POSSIBLE_HACK;\n\t\t\tdata.message = errorMap[data.status];\n\t\t\tverbose.log(\n\t\t\t\t'<Apple>',\n\t\t\t\t'Empty purchased detected: in_app array is empty:',\n\t\t\t\t'consider invalid and does not validate',\n\t\t\t\tdata\n\t\t\t);\n\t\t\treturn cb(new Error('failed to validate for empty purchased list'), data);\n\t\t}\n\t\t// validated successfully\n\t\treturn cb(null, data);\n\t} else {\n\t\t// error -> add error message\n\t\tdata.message = errorMap[data.status] || 'Unkown';\n\t}\n\t\n\t// failed to validate\n\tcb(new Error('failed to validate purchase'), data);\n}\n\nfunction send(url, content, cb) {\n\tvar options = {\n\t\tencoding: null,\n\t\turl: url,\n\t\tbody: content,\n\t\tjson: true\n\t};\n\trequest.post(options, function (error, res, body) {\n\t\treturn cb(error, res, body);\n\t});\n}\n\nfunction applyResponseData(target, source) {\n\tfor (var key in source) {\n\t\tif (target[key] === undefined) {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/verbose.js":"'use strict';\n\nvar enabled = false;\n\nmodule.exports.setup = function (config) {\n\tenabled = (config && config.verbose === true) ? true : false;\n};\n\nmodule.exports.log = function () {\n\tif (!enabled) {\n\t\treturn;\n\t}\n\tvar logs = [];\n\tlogs.push('[' + Date.now() + '][VERBOSE]');\n\tfor (var i in arguments) {\n\t\tlogs.push(arguments[i]);\n\t}\n\tconsole.log.apply(console, logs);\n};\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/constants.js":"'use strict';\n\n// services\nexports.SERVICES = {\n\tAPPLE: 'apple',\n\tGOOGLE: 'google',\n\tWINDOWS: 'windows',\n\tAMAZON: 'amazon'\n};\n\n// validation\nexports.VALIDATION = {\n\tSUCCESS: 0,\n\tFAILURE: 1,\n\tPOSSIBLE_HACK: 2\n};\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/responseData.js":"'use strict';\n\nmodule.exports.parse = function (response) {\n\tvar res = {};\n\tfor (var key in response) {\n\t\tvar val = response[key];\n\t\tvar name = toCamelCase(key);\n\t\tif (!isNaN(val) && typeof val !== 'boolean') {\n\t\t\tres[name] = parseFloat(val);\t\n\t\t} else {\n\t\t\tres[name] = val;\n\t\t}\n\t}\n\treturn res;\n};\n\nfunction toCamelCase(str) {\n\tvar list = str.split('_');\n\tvar res = '';\n\tfor (var i = 0, len = list.length; i < len; i++) {\n\t\tres += (i === 0 ? list[i][0] : list[i][0].toUpperCase()) + list[i].substring(1);\n\t}\n\treturn res;\n}\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/google.js":"var constants = require('../constants');\nvar fs = require('fs');\nvar crypto = require('crypto');\nvar async = require('./async');\nvar request = require('request');\nvar responseData = require('./responseData');\nvar verbose = require('./verbose');\n\nvar sandboxPkey = 'iap-sandbox';\nvar livePkey = 'iap-live';\nvar config = null;\nvar keyPathMap = {};\nvar publicKeyMap = {};\nvar googleTokenMap = {};\nvar checkSubscriptionState = false;\nvar KEYS = {\n\tACCESS_TOKEN: 'access_token',\n\tGRANT_TYPE: 'grant_type',\n\tCLIENT_ID: 'client_id',\n\tCLIENT_SECRET: 'client_secret',\n\tREFRESH_TOKEN: 'refresh_token'\n};\nvar ENV_PUBLICKEY = {\n\tSANDBOX: 'GOOGLE_IAB_PUBLICKEY_SANDBOX',\n\tLIVE: 'GOOGLE_IAB_PUBLICKEY_LIVE'\n};\nvar NAME = '<Google>';\n\nfunction isValidConfigKey(key) {\n\treturn key.match(/^google/);\n}\n\n// test use only\nmodule.exports.reset = function () {\n\tconfig = null;\n\tkeyPathMap = {};\n\tpublicKeyMap = {};\n\tgoogleTokenMap = {};\n\tcheckSubscriptionState = false;\n};\n\nmodule.exports.readConfig = function (configIn) {\n\tif (!configIn) {\n\t\t// no google iap or public key(s) from ENV variables\n\t\treturn;\n\t}\n\tverbose.setup(configIn);\n\tconfig = {};\n\tvar configValueSet = false;\n\tObject.keys(configIn).forEach(function (key) {\n\t\tif (isValidConfigKey(key)) {\n\t\t\tconfig[key] = configIn[key];\n\t\t\tconfigValueSet = true;\n\t\t}\n\t});\n\n\t// backward compatibility\n\tif (configIn && configIn.publicKeyStrSandbox) {\n\t\tconfig.googlePublicKeyStrSandbox = configIn.publicKeyStrSandbox;\n\t}\n\tif (configIn && configIn.publicKeyStrLive) {\n\t\tconfig.googlePublicKeyStrLive = configIn.publicKeyStrLive;\n\t}\n\n\tif (!configValueSet) {\n\t\tconfig = null;\n\t\treturn;\n\t}\n\n\tkeyPathMap.sandbox = config.googlePublicKeyPath + sandboxPkey;\n\tkeyPathMap.live = config.googlePublicKeyPath + livePkey;\n\n\tif (config.googleAccToken && config.googleRefToken && config.googleClientID && config.googleClientSecret) {\n\t\tgoogleTokenMap.accessToken = config.googleAccToken;\n\t\tgoogleTokenMap.refreshToken = config.googleRefToken;\n\t\tgoogleTokenMap.clientID = config.googleClientID;\n\t\tgoogleTokenMap.clientSecret = config.googleClientSecret;\n\t\tcheckSubscriptionState = true;\n\t}\n};\n\nmodule.exports.setup = function (cb) {\n\tif (config && (config.googlePublicKeyStrSandbox || config.googlePublicKeyStrLive)) {\n\t\t// try to read public key value as string\n\t\tif (config && config.googlePublicKeyStrSandbox) {\n\t\t\tpublicKeyMap.sandbox = config.googlePublicKeyStrSandbox;\n\t\t}\n\t\tif (config && config.googlePublicKeyStrLive) {\n\t\t\tpublicKeyMap.live = config.googlePublicKeyStrLive;\n\t\t}\n\t\treturn cb();\n\t}\n\tif (!config || !config.googlePublicKeyPath) {\n\t\t// try to read public key value from ENV if available\n\t\t// if this is set, reading the public key value from file system is ignored\n\t\tif (process.env[ENV_PUBLICKEY.SANDBOX]) {\n\t\t\tpublicKeyMap.sandbox = process.env[ENV_PUBLICKEY.SANDBOX].replace(/s+$/, '');\n\t\t}\n\t\tif (process.env[ENV_PUBLICKEY.LIVE]) {\n\t\t\tpublicKeyMap.live = process.env[ENV_PUBLICKEY.LIVE].replace(/s+$/, '');\n\t\t}\n\t\treturn cb();\n\t}\n\tvar keys = Object.keys(keyPathMap);\n\tasync.eachSeries(keys, function (key, next) {\n\t\tvar pkeyPath = keyPathMap[key];\n\t\tfs.readFile(pkeyPath, function (error, fileData) {\n\t\t\t// we are ignoring missing public key file(s)\n\t\t\tif (error) {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\tpublicKeyMap[key] = fileData.toString().replace(/\\s+$/, '');\n\t\t\tnext();\n\t\t});\n\t}, cb);\n};\n\n// receipt is an object\n/*\n* receipt = { receipt: 'stringified receipt data', signature: 'receipt signature' };\n* if receipt.data is an object, it silently stringifies it\n*/\nmodule.exports.validatePurchase = function (dPubkey, receipt, cb) {\n\n\tverbose.log(NAME, 'Validate this:', receipt);\n\n\tif (typeof receipt !== 'object') {\n\t\tverbose.log(NAME, 'Failed: malformed receipt');\n\t\treturn cb(new Error('malformed receipt: ' + receipt), {\n\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\tmessage: 'Malformed receipt'\n\t\t});\n\t}\n\t// the data might be in receipt and not in data\n\tif (receipt.receipt && !receipt.data) {\n\t\treceipt.data = receipt.receipt;\n\t}\n\tif (!receipt.data || !receipt.signature) {\n\t\tverbose.log(NAME, 'Failed: missing receipt content');\n\t\treturn cb(new Error('missing receipt data:\\n' + JSON.stringify(receipt)), {\n\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\tmessage: 'Malformed receipt'\n\t\t});\n\t}\n\tif (typeof receipt.data === 'object') {\n\t\t// stringify and make sure to escpace the value of developerPayload\n\t\treceipt.data = JSON.stringify(receipt.data).replace(/\\//g, '\\\\/');\n\t\tverbose.log(NAME, 'Auto stringified receipt data:', receipt.data);\n\t}\n\n\tvar pubkey = publicKeyMap.live;\n\n\t// override pubkey to allow dynamically fed public key to validate\n\tif (dPubkey) {\n\t\tverbose.log(NAME, 'Using dynamically fed public key:', dPubkey);\n\t\tpubkey = dPubkey;\n\t}\n\n\tverbose.log(NAME, 'Try validate against live public key:', pubkey);\n\t// try live first\n\tvalidatePublicKey(receipt, getPublicKey(pubkey), function (error, data) {\n\t\tif (error) {\n\t\t\tif (!publicKeyMap.sandbox) {\n\t\t\t\tverbose.log(NAME, 'Failed to validate against:', pubkey, error);\n\t\t\t\treturn cb(error, {\n\t\t\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\t\t\tmessage: error.message\n\t\t\t\t});\n\t\t\t}\n\t\t\tpubkey = publicKeyMap.sandbox;\n\t\t\tverbose.log(NAME, 'Failed against live public key:', error);\n\t\t\tverbose.log(NAME, 'Try validate against sandbox public key:', pubkey);\n\t\t\t// now try sandbox\n\t\t\tvalidatePublicKey(receipt, getPublicKey(pubkey), function (error2, data) {\n\t\t\t\tif (error2) {\n\t\t\t\t\tverbose.log(NAME, 'Failed against sandbox public key:', error2);\n\t\t\t\t\t// we will send the error from live only\n\t\t\t\t\treturn cb(error, {\n\t\t\t\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\t\t\t\tmessage: error.message\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tverbose.log(NAME, 'Validation against sandbox public key successful:', data);\n\t\t\t\t// sandbox worked\n\t\t\t\tcheckSubscriptionStatus(data, cb);\n\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tverbose.log(NAME, 'Validation against live public key successful:', data);\n\t\t// live worked\n\t\tcheckSubscriptionStatus(data, cb);\n\n\t});\n};\n\nmodule.exports.getPurchaseData = function (purchase) {\n\tif (!purchase) {\n\t\treturn null;\n\t}\n\tvar data = [];\n\t/*\n\tvar purchaseInfo = {\n\t\ttransactionId: purchase.purchaseToken,\n\t\torderId: purchase.orderId,\n\t\tproductId: purchase.productId,\n\t\tpurchaseDate: purchase.purchaseTime,\n\t\tquantity: 1\n\t};\n\t*/\n\tvar purchaseInfo = responseData.parse(purchase);\n\tpurchaseInfo.transactionId = purchase.purchaseToken;\n\tpurchaseInfo.purchaseDate = purchase.purchaseTime;\n\tpurchaseInfo.quantity = 1;\n\n\tif (checkSubscriptionState) {\n\t\tpurchaseInfo.expirationDate = purchase.expirationTime;\n\t}\n\n\tdata.push(purchaseInfo);\n\treturn data;\n};\n\n/**\n* Function to check subscription status in Google Play\n* @param\t{Object}\tdata\treceipt data\n* @param\t{Function}\tcb\tcallback function\n*/\nfunction checkSubscriptionStatus(data, cb) {\n\n\tdata.service = constants.SERVICES.GOOGLE;\n\n\tif (!checkSubscriptionState) {\n\t\treturn cb(null, data);\n\t}\n\tvar packageName = data.packageName;\n\tvar subscriptionID = data.productId;\n\tvar purchaseToken = data.purchaseToken;\n\tvar urlPurchaseTypeSegment = data.autoRenewing === undefined ? 'products' : 'subscriptions';\n\n\tvar url = 'https://www.googleapis.com/androidpublisher/v2/applications/' + packageName +\n\t\t'/purchases/' + urlPurchaseTypeSegment + '/' + subscriptionID + '/tokens/' + purchaseToken;\n\n\tvar state;\n\n\tvar getSubInfo = function (next) {\n\n\t\tverbose.log(NAME, 'Get subscription info from', url);\n\n\t\tgetSubscriptionInfo(url, function (error, response, body) {\n\n\t\t\tif (error || 'error' in body) {\n\n\t\t\t\tverbose.log(NAME, 'Failed to get subscription info from', url, error, body);\n\n\t\t\t\tstate = constants.VALIDATION.FAILURE;\n\t\t\t\t// we must move on to validate()\n\t\t\t\tnext();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.autoRenewing = body.autoRenewing;\n\t\t\tdata.expirationTime = body.expiryTimeMillis;\n\n\t\t\tstate = constants.VALIDATION.SUCCESS;\n\n\t\t\tverbose.log(NAME, 'Successfully retrieved subscription info from', url, data);\n\n\t\t\tnext();\n\t\t});\n\t};\n\n\tvar validate = function (next) {\n\t\tswitch (state) {\n\t\t\tcase constants.VALIDATION.SUCCESS:\n\t\t\t\t// This line tells the next function there is no need to get subscription Info again.\n\t\t\t\t// We should read this as a \"No, don't call that function again\"\n\n\t\t\t\tverbose.log(NAME, 'Validated successfully');\n\n\t\t\t\tnext(null, constants.VALIDATION.FAILURE);\n\t\t\t\tbreak;\n\t\t\tcase constants.VALIDATION.FAILURE:\n\n\t\t\t\tverbose.log(NAME, 'Refresh Google token');\n\n\t\t\t\trefreshGoogleTokens(function (error, res, body) {\n\t\t\t\t\tif (error) {\n\n\t\t\t\t\t\tverbose.log(NAME, 'Failed to refresh Google token:', error);\n\n\t\t\t\t\t\treturn cb(error, {\n\t\t\t\t\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\t\t\t\t\tmessage: error.message\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parsedBody = JSON.parse(body);\n\n\t\t\t\t\tif ('error' in parsedBody) {\n\n\t\t\t\t\t\tverbose.log(NAME, 'Failed to refresh Google token:', parsedBody);\n\n\t\t\t\t\t\treturn cb(new Error(parsedBody.error), {\n\t\t\t\t\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\t\t\t\t\tmessage: parsedBody.error\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store new access token\n\t\t\t\t\tgoogleTokenMap.accessToken = parsedBody[KEYS.ACCESS_TOKEN];\n\n\t\t\t\t\tstate = constants.VALIDATION.SUCCESS;\n\n\t\t\t\t\tverbose.log(NAME, 'Successfully refreshed Google token:', googleTokenMap.accessToken);\n\n\t\t\t\t\t// On the other hand, here we are telling the next function\n\t\t\t\t\t// to get subscription Info again.\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tvar  recheck = function (next) {\n\t\tif (state === constants.VALIDATION.SUCCESS) {\n\n\t\t\tverbose.log(NAME, 'Re-check subscription info:', url);\n\n\t\t\tgetSubscriptionInfo(url, function (error, response, body) {\n\t\t\t\tif (error || 'error' in body) {\n\n\t\t\t\t\tverbose.log(NAME, 'Re-check failed:', url, error, body);\n\n\t\t\t\t\tstate = constants.VALIDATION.FAILURE;\n\t\t\t\t\tnext(error ? error : new Error(body.error));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdata.autoRenewing = body.autoRenewing;\n\t\t\t\tdata.expirationTime = body.expiryTimeMillis;\n\t\t\t\tstate = constants.VALIDATION.SUCCESS;\n\n\t\t\t\tverbose.log(NAME, 'Re-check successfully retrieved subscription info:', url, data);\n\n\t\t\t\tnext();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// refresh failed\n\t\tstate = constants.VALIDATION.FAILURE;\n\t\tnext();\n\t};\n\n\tvar done = function (error) {\n\t\tif (error) {\n\t\t\treturn cb(error, {\n\t\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\t\tmessage: error.message\n\t\t\t});\n\t\t}\n\n\t\tcb(null, data);\n\t};\n\n\tvar tasks = [\n\t\tgetSubInfo,\n\t\tvalidate,\n\t\trecheck\n\t];\n\n\tasync.series(tasks, done);\n}\n\nfunction getPublicKey(publicKey) {\n\tif (!publicKey) {\n\t\treturn null;\n\t}\n\tvar key = chunkSplit(publicKey, 64, '\\n');\n\tvar pkey = '-----BEGIN PUBLIC KEY-----\\n' + key + '-----END PUBLIC KEY-----\\n';\n\treturn pkey;\n}\n\nfunction validatePublicKey(receipt, pkey, cb) {\n\tif (!receipt || !receipt.data) {\n\t\treturn cb(new Error('missing receipt data'));\n\t}\n\tif (!pkey) {\n\t\treturn cb(new Error('missing public key'));\n\t}\n\tif (typeof receipt.data !== 'string') {\n\t\treturn cb(new Error('receipt.data must be a string'));\n\t}\n\tvar validater = crypto.createVerify('SHA1');\n\tvar valid;\n\tvalidater.update(receipt.data);\n\ttry {\n\t\tvalid = validater.verify(pkey, receipt.signature, 'base64');\n\t} catch (error) {\n\t\treturn cb(error);\n\t}\n\tif (valid) {\n\t\t// validated successfully\n\t\tvar data = JSON.parse(receipt.data);\n\t\tdata.status = constants.VALIDATION.SUCCESS;\n\t\treturn cb(null, data);\n\t}\n\t// failed to validate\n\tcb(new Error('failed to validate purchase'));\n}\n\nfunction chunkSplit(str, len, end) {\n\tlen = parseInt(len, 10) || 76;\n\tif (len < 1) {\n\t\treturn false;\n\t}\n\tend = end || '\\r\\n';\n\treturn str.match(new RegExp('.{0,' + len + '}', 'g')).join(end);\n}\n\nfunction getSubscriptionInfo(url, cb) {\n\tvar options = {\n\t\tmethod: 'GET',\n\t\turl: url,\n\t\theaders: {\n\t\t\t'Authorization': 'Bearer ' + googleTokenMap.accessToken\n\t\t},\n\t\tjson: true\n\t};\n\n\trequest(options, cb);\n}\n\nmodule.exports.refreshToken = function (cb) {\n\n\tif (!checkSubscriptionState) {\n\t\treturn cb(new Error('missing google play api info'), {\n\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\tmessage: 'client_id, client_secret, access_token and refres_token should be provided'\n\t\t});\n\t}\n\n\trefreshGoogleTokens(function (error, res, body) {\n\t\tif (error) {\n\t\t\treturn cb(error, { status: constants.VALIDATION.FAILURE, message: error.message });\n\t\t}\n\n\t\tvar parsedBody = JSON.parse(body);\n\n\t\tif ('error' in parsedBody) {\n\t\t\treturn cb(new Error(parsedBody.error), {\n\t\t\t\tstatus: constants.VALIDATION.FAILURE,\n\t\t\t\tmessage: parsedBody.error\n\t\t\t});\n\t\t}\n\n\t\t// Store new access token\n\t\tgoogleTokenMap.accessToken = parsedBody[KEYS.ACCESS_TOKEN];\n\t\tcb(null, parsedBody);\n\t});\n};\n\nfunction refreshGoogleTokens(cb) {\n\n\tvar body = {};\n\tbody[KEYS.GRANT_TYPE] = KEYS.REFRESH_TOKEN;\n\tbody[KEYS.CLIENT_ID] = googleTokenMap.clientID;\n\tbody[KEYS.CLIENT_SECRET] = googleTokenMap.clientSecret;\n\tbody[KEYS.REFRESH_TOKEN] = googleTokenMap.refreshToken;\n\n\tvar options = {\n\t\tmethod: 'POST',\n\t\turl: 'https://accounts.google.com/o/oauth2/token',\n\t\tform: body\n\t};\n\n\trequest(options, cb);\n}\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/windows.js":"var verbose = require('./verbose');\nvar constants = require('../constants');\nvar xmlCrypto = require('xml-crypto');\nvar Parser = require('xmldom').DOMParser;\nvar request = require('request');\nvar responseData = require('./responseData');\nvar url = 'https://lic.apps.microsoft.com/licensing/certificateserver/?cid=';\nvar sigXPath = '//*//*[local-name(.)=\\'Signature\\' and namespace-uri(.)=\\'http://www.w3.org/2000/09/xmldsig#\\']';\n\nvar NAME = '<Windows>';\n\nmodule.exports.readConfig = function (configIn) {\n\tif (!configIn) {\n\t\t// no required config\n\t\treturn;\n\t}\n\tverbose.setup(configIn);\n\t// Apply any default settings to Request.\n\tif ('requestDefaults' in configIn) {\n\t\trequest = request.defaults(configIn.requestDefaults);\n\t}\n};\n\n// receipt is an XML string... oh microsoft... why?\nmodule.exports.validatePurchase = function (receipt, cb) {\n\tvar certId;\n\tvar options = {\n\t\tignoreWhiteSpace: true,\n\t\terrorHandler: {\n\t\t\tfatalError: handleError,\n\t\t\terror: handleError\n\t\t}\n\t};\n\tvar handleError = function (error) {\n\t\tif (typeof error === 'string') {\n\t\t\terror = new Error(error);\n\t\t}\n\t\tcb(error);\n\t};\n\tverbose.log(NAME, 'Validate:', receipt);\n\ttry {\n\t\tvar doc = new Parser(options).parseFromString(receipt);\n\t\tcertId = doc.firstChild.getAttribute('CertificateId');\n\t} catch (e) {\n\t\tverbose.log(NAME, 'Failed:', e);\n\t\treturn cb(new Error('failed to validate purchase: ' + e.message), { status: constants.VALIDATION.FAILURE, message: e.message });\n\t}\n\tif (!certId) {\n\t\tverbose.log(NAME, 'Failed: Invalid certificate ID');\n\t\treturn cb(new Error('failed to find certificate ID'), { status: constants.VALIDATION.FAILURE, message: 'Invalid certificate ID' });\n\t}\n\tverbose.log(NAME, 'Get public key from:', url + certId);\n\tsend(url + certId, function (error, body) {\n\t\tif (error) {\n\t\t\tverbose.log(NAME, 'Failed to get public key:', (url + certId), error);\n\t\t\treturn cb(error);\n\t\t}\n\t\tvar data;\n\t\ttry {\n\t\t\tvar publicKey = body;\n\t\t\tvar canonicalXML = removeWhiteSpace(doc.firstChild).toString();\n\t\t\tvar signature = xmlCrypto.xpath(doc, sigXPath);\n\t\t\tvar sig = new xmlCrypto.SignedXml();\n\t\t\tsig.keyInfoProvider = new Cert(publicKey);\n\t\t\tsig.loadSignature(signature.toString());\n\t\t\tif (sig.checkSignature(canonicalXML)) {\n\t\t\t\t// create purchase data\n\t\t\t\tvar items = doc.getElementsByTagName('ProductReceipt');\n\t\t\t\tvar purchases = [];\n\t\t\t\tfor (var i = 0, len = items.length; i < len; i++) {\n\t\t\t\t\tvar item = items[i];\n\t\t\t\t\tpurchases.push({\n\t\t\t\t\t\ttransactionId: item.getAttribute('Id'),\n\t\t\t\t\t\tproductId: item.getAttribute('ProductId'),\n\t\t\t\t\t\tpurchaseDate: item.getAttribute('PurchaseDate'),\n\t\t\t\t\t\texpirationDate: item.getAttribute('ExpirationDate'),\n\t\t\t\t\t\tproductType: item.getAttribute('ProductType'),\n\t\t\t\t\t\tappId: item.getAttribute('AppId')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// successful validation\n\t\t\t\tdata = {\n\t\t\t\t\tservice: constants.SERVICES.WINDOWS,\n\t\t\t\t\tstatus: constants.VALIDATION.SUCCESS,\n\t\t\t\t\tpurchases: purchases\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tverbose.log(NAME, 'Failed to validated:', e);\n\t\t\treturn cb(new Error('failed to validate purchase: ' + e.message), { status: constants.VALIDATION.FAILURE, message: e.message });\n\t\t}\n\t\t// done\n\t\tverbose.log(NAME, 'Validation success:', data);\n\t\tcb(null, data);\n\t});\n};\n\nmodule.exports.getPurchaseData = function (purchase, options) {\n\tif (!purchase || !purchase.purchases || !purchase.purchases.length) {\n\t\treturn null;\n\t}\n\tvar data = [];\n\tfor (var i = 0, len = purchase.purchases.length; i < len; i++) {\n\t\tvar item = purchase.purchases[i];\n\t\tvar exp = new Date(item.expirationDate).getTime();\n\n\t\tif (options && options.ignoreExpired && exp && Date.now() - exp >= 0) {\n\t\t\t// we are told to ignore expired item and it has been expired\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar parsed = responseData.parse(item);\n\t\tparsed.purchaseData =  new Date(item.purchaseDate).getTime();\n\t\tparsed.expirationDate = exp;\n\t\tparsed.quantity = 1;\n\t\tdata.push(parsed);\n\t}\n\treturn data;\n};\n\nfunction send(url, cb) {\n\tvar options = {\n\t\tencoding: null,\n\t\turl: url\n\t};\n\trequest.get(options, function (error, res, body) {\n\t\tif (error) {\n\t\t\treturn cb(error, { status: res.status, message: body });\n\t\t}\n\t\tif (!body) {\n\t\t\treturn cb(new Error('invalid response from the service'), { status: res.status, message: 'Unknown' });\n\t\t}\n\t\tcb(null, body.toString('utf8'));\n\t});\n}\n\nfunction removeWhiteSpace(node) {\n\tvar rootNode = node;\n\twhile (node) {\n\t\tif (!node.tagName && (node.nextSibling || node.previousSibling)) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t\tremoveWhiteSpace(node.firstChild);\n\t\tnode = node.nextSibling;\n\t}\n\treturn rootNode;\n}\n\nfunction Cert(pubKey) {\n\tthis._pubKey = pubKey;\n}\n\nCert.prototype.getKeyInfo = function () {\n\treturn '<X509Data></X509Data>';\n};\n\nCert.prototype.getKey = function () {\n\treturn this._pubKey;\n};\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/amazonManager.js":"'use strict';\n\nvar amazon = require('./amazon');\nvar amazon2 = require('./amazon2');\n\nmodule.exports.create = function (_config) {\n\tif (_config && _config.amazonAPIVersion === 2) {\n\t\tamazon2.readConfig(_config);\n\t\treturn amazon2;\n\t} else {\n\t\tamazon.readConfig(_config);\n\t\treturn amazon;\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/amazon.js":"var constants = require('../constants');\nvar request = require('request');\nvar fs = require('fs');\nvar responseData = require('./responseData');\nvar verbose = require('./verbose');\n\nvar VER = '2.0';\nvar SECRET = '{developerSecret}';\nvar UID = '{userId}';\nvar PTOKEN = '{purchaseToken}';\nvar ERRORS = {\n\tVALIDATION: {\n\t\t400: 'The transaction represented by this Purchase Token is no longer valid.',\n\t\t404: 'Unknown operation exception.',\n\t\t496: 'Invalid sharedSecret',\n\t\t497: 'Invalid User ID',\n\t\t498: 'Invalid Purchase Token',\n\t\t499: 'The Purchase Token was created with credentials that have expired, use renew to generate a valid purchase token.',\n\t\t500: 'There was an Internal Server Error'\n\t},\n\tRENEW: {\n\t\t400: 'Bad Request',\n\t\t404: 'Unknown operation exception.',\n\t\t496: 'Invalid sharedSecret',\n\t\t497: 'Invalid User ID',\n\t\t498: 'Invalid Purchase Token',\n\t\t500: 'There is an Internal Server Error'\n\t}\n};\n\nvar VALIDATION_PATH = 'https://appstore-sdk.amazon.com/version/' +\n\tVER + '/verify/developer/' + SECRET + '/user/' + UID + '/purchaseToken/' + PTOKEN;\nvar RENEW_PATH = 'https://appstore-sdk.amazon.com/version/' +\n\tVER + '/renew/developer/' + SECRET + '/user/' + UID + '/purchaseToken/' + PTOKEN;\n\nvar S_VAL_PATH = VALIDATION_PATH;\nvar S_R_PATH = RENEW_PATH;\n\nvar NAME = '<Amazon>';\n\nvar config;\n\nmodule.exports.readConfig = function (configIn) {\n\tconfig = configIn;\n\tverbose.setup(config);\n};\n\nmodule.exports.setup = function (cb) {\n\tif (!config || !config.secret) {\n\t\treturn cb();\n\t}\n\tfs.exists(config.secret, function (exists) {\n\t\tvar secret = '';\n\t\tif (!exists) {\n\t\t\t// use the string value literally\n\t\t\tsecret = config.secret;\n\t\t\tVALIDATION_PATH = VALIDATION_PATH.replace(SECRET, config.secret);\n\t\t\tRENEW_PATH = RENEW_PATH.replace(SECRET, config.secret);\n\t\t\tverbose.log(NAME, 'Secret:', config.secret);\n\t\t\treturn cb();\n\t\t}\n\t\t// assume it as a file path\n\t\tfs.readFile(config.secret, 'UTF-8', function (error, val) {\n\t\t\tif (error) {\n\t\t\t\treturn cb(error);\n\t\t\t}\n\t\t\tsecret = val.replace(/(\\r|\\n)/g, '');\n\t\t\tVALIDATION_PATH = VALIDATION_PATH.replace(SECRET, secret);\n\t\t\tRENEW_PATH = RENEW_PATH.replace(SECRET, secret);\n\t\t\tverbose.log(NAME, 'Secret:', secret);\n\t\t\tcb();\n\t\t});\n\t});\n};\n\n/*\nreceipt: {\n\tuserId: <user ID amazon in-app-purchase-server responds with>\n\treceiptId: <receipt ID from amazon>\n}\n*/\nmodule.exports.validatePurchase = function (dSecret, receipt, cb) {\n\tvar rpath = RENEW_PATH;\n\tvar path;\t\n\n\t// override secret with dSecret to allow dynamically fed secret to validate\n\tif (dSecret) {\n\t\tverbose.log(NAME, 'Use dynamically fed secret:', dSecret);\n\t\trpath = S_R_PATH.replace(SECRET, dSecret);\n\t\tvar vpath = S_VAL_PATH.replace(SECRET, dSecret);\n\t\tpath = vpath.replace(UID, receipt.userId);\n\t} else {\n\t\tpath = VALIDATION_PATH.replace(UID, receipt.userId);\n\t}\n\tpath = path.replace(PTOKEN, receipt.receiptId);\n\tverbose.log(NAME, 'Validate:', path, receipt);\n\tsend(path, ERRORS.VALIDATION, function (error, res) {\n\t\tif (error) {\n\t\t\tif (res === 499) {\n\t\t\t\t// must be renewed and re-tried\n\t\t\t\tvar renew = rpath.replace(UID, receipt.userId);\n\t\t\t\trenew = renew.replace(PTOKEN, receipt.receiptId);\n\t\t\t\tverbose.log(NAME, 'Purchase must be renewed (' + res + '):', renew);\n\t\t\t\tsend(renew, ERRORS.RENEW, function (error, renewed) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tvar renewedErrorRes = {\n\t\t\t\t\t\t\tstatus: renewed,\n\t\t\t\t\t\t\tmessage: ERRORS.RENEW[renewed] || 'Unkown'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tverbose.log(NAME, 'Failed to renew purchase:', renewedErrorRes);\n\t\t\t\t\t\treturn cb(error, renewedErrorRes);\n\t\t\t\t\t}\n\t\t\t\t\tvar renewedReceipt = {\n\t\t\t\t\t\treceiptId: renewed.purchaseToken,\n\t\t\t\t\t\tuserId: receipt.userId\n\t\t\t\t\t};\n\t\t\t\t\tverbose.log(NAME, 'Purchase renewed:', renewedReceipt);\n\t\t\t\t\tmodule.exports.validatePurchase(renewedReceipt, cb);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\t\t\n\n\t\t\tvar errorRes = {\n\t\t\t\tstatus: res,\n\t\t\t\tmessage: ERRORS.VALIDATION[res] || 'Unknown'\n\t\t\t};\n\t\t\tverbose.log(NAME, 'Validation failed:', errorRes);\n\t\t\treturn cb(error, errorRes);\n\t\t}\n\t\tverbose.log(NAME, 'Validation successful:', res);\n\t\tcb(null, res);\n\t});\n};\n\nmodule.exports.getPurchaseData = function (purchase) {\n\tif (!purchase || !purchase.purchaseToken) {\n\t\treturn null;\n\t}\n\tvar obj = responseData.parse(purchase);\n\tobj.transactionId = purchase.purchaseToken;\n\tobj.productId = purchase.sku;\n\tobj.purchaseData = purchase.itemType;\n\tobj.quantity = 1;\n\tobj.purchaseDate = purchase.startDate || Date.now();\n\tobj.expirationDate = purchase.endDate || 0;\n\treturn [ obj ];\n};\n\nfunction send(path, errorMap, cb) {\n\trequest.get(path, function (error, response, body) {\n\t\tvar errorMsg = errorMap[response.statusCode];\n\t\tif (errorMsg) {\n\t\t\treturn cb(new Error(errorMsg + ': ' + path), response.statusCode);\n\t\t}\n\t\tif (error) {\n\t\t\terror.message += ': ' + path;\n\t\t\treturn cb(error);\n\t\t}\n\t\tvar res = JSON.parse(body);\n\t\tres.status = 0;\n\t\tres.service = constants.SERVICES.AMAZON;\n\t\tcb(null, res);\n\t});\n}\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/amazon2.js":"var constants = require('../constants');\nvar request = require('request');\nvar fs = require('fs');\nvar verbose = require('./verbose');\n\n// for some reason amazon v2.0 RVS is 1.0....\nvar VER = '1.0';\nvar SECRET = '{sharedSecret}';\nvar UID = '{userId}';\nvar RID = '{receiptId}';\nvar ERRORS = {\n\tVALIDATION: {\n\t\t400: 'The transaction represented by this Purchase Token is no longer valid.',\n\t\t404: 'Unknown operation exception.',\n\t\t496: 'Invalid sharedSecret',\n\t\t497: 'Invalid User ID',\n\t\t498: 'Invalid Purchase Token',\n\t\t499: 'The Purchase Token was created with credentials that have expired, use renew to generate a valid purchase token.',\n\t\t500: 'There was an Internal Server Error'\n\t},\n\tRENEW: {\n\t\t400: 'Bad Request',\n\t\t404: 'Unknown operation exception.',\n\t\t496: 'Invalid sharedSecret',\n\t\t497: 'Invalid User ID',\n\t\t498: 'Invalid Purchase Token',\n\t\t500: 'There is an Internal Server Error'\n\t}\n};\n\nvar VALIDATION_PATH = 'https://appstore-sdk.amazon.com/version/' +\n\tVER + '/verifyReceiptId/developer/' + SECRET + '/user/' + UID + '/receiptId/' + RID;\nvar RENEW_PATH = 'https://appstore-sdk.amazon.com/version/' +\n\tVER + '/renew/developer/' + SECRET + '/user/' + UID + '/receiptId/' + RID;\n\nvar S_VAL_PATH = VALIDATION_PATH;\nvar S_R_PATH = RENEW_PATH;\n\nvar NAME = '<Amazon>';\n\nvar config;\n\nmodule.exports.readConfig = function (configIn) {\n\tconfig = configIn;\n\tverbose.setup(config);\n};\n\nmodule.exports.setup = function (cb) {\n\tif (!config || !config.secret) {\n\t\treturn cb();\n\t}\n\tfs.exists(config.secret, function (exists) {\n\t\tvar secret = '';\n\t\tif (!exists) {\n\t\t\t// use the string value literally\n\t\t\tsecret = config.secret;\n\t\t\tVALIDATION_PATH = VALIDATION_PATH.replace(SECRET, config.secret);\n\t\t\tRENEW_PATH = RENEW_PATH.replace(SECRET, config.secret);\n\t\t\tverbose.log(NAME, 'Secret:', config.secret);\n\t\t\treturn cb();\n\t\t}\n\t\t// assume it as a file path\n\t\tfs.readFile(config.secret, 'UTF-8', function (error, val) {\n\t\t\tif (error) {\n\t\t\t\treturn cb(error);\n\t\t\t}\n\t\t\tsecret = val.replace(/(\\r|\\n)/g, '');\n\t\t\tVALIDATION_PATH = VALIDATION_PATH.replace(SECRET, secret);\n\t\t\tRENEW_PATH = RENEW_PATH.replace(SECRET, secret);\n\t\t\tverbose.log(NAME, 'Secret:', secret);\n\t\t\tcb();\n\t\t});\n\t});\n};\n\n/*\nreceipt: {\n\tuserId: <user ID amazon in-app-purchase-server responds with>\n\treceiptId: <receipt ID from amazon>\n}\n*/\nmodule.exports.validatePurchase = function (dSecret, receipt, cb) {\n\tvar rpath = RENEW_PATH;\n\tvar path;\t\n\n\t// override secret with dSecret to allow dynamically fed secret to validate\n\tif (dSecret) {\n\t\tverbose.log(NAME, 'Use dynamically fed secret:', dSecret);\n\t\trpath = S_R_PATH.replace(SECRET, dSecret);\n\t\tvar vpath = S_VAL_PATH.replace(SECRET, dSecret);\n\t\tpath = vpath.replace(UID, receipt.userId);\n\t} else {\n\t\tpath = VALIDATION_PATH.replace(UID, receipt.userId);\n\t}\n\tpath = path.replace(RID, receipt.receiptId);\n\tverbose.log(NAME, 'Validate:', path, receipt);\n\tsend(path, ERRORS.VALIDATION, function (error, res) {\n\t\tif (error) {\n\t\t\tif (res === 499) {\n\t\t\t\t// must be renewed and re-tried\n\t\t\t\tvar renew = rpath.replace(UID, receipt.userId);\n\t\t\t\trenew = renew.replace(RID, receipt.receiptId);\n\t\t\t\tverbose.log(NAME, 'Purchase must be renewed (' + res + '):', renew);\n\t\t\t\tsend(renew, ERRORS.RENEW, function (error, renewed) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tvar renewedErrorRes = {\n\t\t\t\t\t\t\tstatus: renewed,\n\t\t\t\t\t\t\tmessage: ERRORS.RENEW[renewed] || 'Unkown'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tverbose.log(NAME, 'Failed to renew purchase:', renewedErrorRes);\n\t\t\t\t\t\treturn cb(error, renewedErrorRes);\n\t\t\t\t\t}\n\t\t\t\t\tvar renewedReceipt = {\n\t\t\t\t\t\treceiptId: renewed.receiptId,\n\t\t\t\t\t\tuserId: receipt.userId\n\t\t\t\t\t};\n\t\t\t\t\tverbose.log(NAME, 'Purchase renewed:', renewedReceipt);\n\t\t\t\t\tmodule.exports.validatePurchase(renewedReceipt, cb);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\t\t\n\n\t\t\tvar errorRes = {\n\t\t\t\tstatus: res,\n\t\t\t\tmessage: ERRORS.VALIDATION[res] || 'Unknown'\n\t\t\t};\n\t\t\tverbose.log(NAME, 'Validation failed:', errorRes);\n\t\t\treturn cb(error, errorRes);\n\t\t}\n\t\tverbose.log(NAME, 'Validation successful:', res);\n\t\tcb(null, res);\n\t});\n};\n\nmodule.exports.getPurchaseData = function (purchase) {\n\tif (!purchase || !purchase.receiptId) {\n\t\treturn null;\n\t}\n\tvar obj = {};\n\tobj.transactionId = purchase.receiptId;\n\tobj.productId = purchase.productId;\n\tobj.purchaseData = purchase.productType;\n\tobj.quantity = 1;\n\tobj.purchaseDate = purchase.purchaseDate || Date.now();\n\tobj.expirationDate = purchase.cancelDate || 0;\n\treturn [obj];\n};\n\nfunction send(path, errorMap, cb) {\n\trequest.get(path, function (error, response, body) {\n\t\tvar errorMsg = errorMap[response.statusCode];\n\t\tif (errorMsg) {\n\t\t\treturn cb(new Error(errorMsg + ': ' + path), response.statusCode);\n\t\t}\n\t\tif (error) {\n\t\t\terror.message += ': ' + path;\n\t\t\treturn cb(error);\n\t\t}\n\t\tvar res = null;\n\t\ttry {\n\t\t\tres = JSON.parse(body);\n\t\t\tres.status = 0;\n\t\t\tres.service = constants.SERVICES.AMAZON;\n\t\t}\n\t\tcatch (exc) {\n\t\t\texc.message += ': ' + path;\n\t\t\treturn cb(exc);\n\t\t}\n\t\tcb(null, res);\n\t});\n}\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.25#2.js":"var iap = require('./');\nvar windowsReceipt = \"<Receipt Version=\\\"2.0\\\" CertificateId=\\\"A656B9B1B3AA509EEA30222E6D5E7DBDA9822DCD\\\" xmlns=\\\"http://schemas.microsoft.com/windows/2012/store/receipt\\\"><ProductReceipt PurchasePrice=\\\"$0\\\" PurchaseDate=\\\"2015-12-16T09:33:59.613Z\\\" Id=\\\"1f41b1ff-210f-4be0-8db3-b746d8d87d37\\\" AppId=\\\"3906NikolayDavidenko.WPSlots2Test_mzyx4maq09rr4\\\" ProductId=\\\"coins_100\\\" ProductType=\\\"Consumable\\\" PublisherUserId=\\\"4+460VFG5YUVFMhnCg9Jxq2jAX3ikr02bdj7QJ4kpYM=\\\" PublisherDeviceId=\\\"j2zn9jpt+51yLDbq0aW3inKiKdgT7pJnFKMKiknD/ug=\\\" MicrosoftProductId=\\\"d967606b-c78a-4567-af73-894c8d852f03\\\" MicrosoftAppId=\\\"e84c1075-cd38-4ce2-ad1a-9202ce4bbde4\\\" /><Signature xmlns=\\\"http://www.w3.org/2000/09/xmldsig#\\\"><SignedInfo><CanonicalizationMethod Algorithm=\\\"http://www.w3.org/2001/10/xml-exc-c14n#\\\" /><SignatureMethod Algorithm=\\\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\\\" /><Reference URI=\\\"\\\"><Transforms><Transform Algorithm=\\\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\\\" /></Transforms><DigestMethod Algorithm=\\\"http://www.w3.org/2001/04/xmlenc#sha256\\\" /><DigestValue>lL32xbIYS1hOIZEKHO713Ah3tx+7Z004n1EYBq+Wxng=</DigestValue></Reference></SignedInfo><SignatureValue>ajbOwQ5enxNEZNXazifkjkKiC5rQOyAL5HXIqYgRoq6S2j3cAVytnjT4mQBocmk8I/sUW1sS+xFOuWV4j1S0URrle5mHE5PZVztdodmts2QI0q1/ol1272mqfARtbc1xeY60uVc9zVzvv41GgYiBfXBAMKzN4lVU4Tra23EjyD2jN9HK1+rC1yYSB6gSuV95DqAHj6sy/f2mjEsY007zNC+CmdKtprJiH8NmJhVtDQHNQGMmg3gipige8grVVl+unPfXOF7RI+h9J2O3RGoFuKBWil+dLBkNXAbEpe5l6WSEEV31Gw0oz2NyYSbxiPef6R2ZXWukt/gBtLmRGN7rFw==</SignatureValue></Signature></Receipt>\";\n\niap.setup(function (err) {\n    if (err) {\n        console.error(err);\n    }\n    iap.validate(iap.WINDOWS, windowsReceipt, function (err, windowsRes) {\n        if (err) {\n            console.error(err);\n        }\n        if (iap.isValidated(windowsRes)) {\n            console.info(\"Ok\");\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.25.js":"var iap = require('./');\nvar windowsReceipt = \"<Receipt Version=\\\"2.0\\\" CertificateId=\\\"A656B9B1B3AA509EEA30222E6D5E7DBDA9822DCD\\\" xmlns=\\\"http://schemas.microsoft.com/windows/2012/store/receipt\\\"><ProductReceipt PurchasePrice=\\\"$0\\\" PurchaseDate=\\\"2015-12-16T09:33:59.613Z\\\" Id=\\\"1f41b1ff-210f-4be0-8db3-b746d8d87d37\\\" AppId=\\\"3906NikolayDavidenko.WPSlots2Test_mzyx4maq09rr4\\\" ProductId=\\\"coins_100\\\" ProductType=\\\"Consumable\\\" PublisherUserId=\\\"4+460VFG5YUVFMhnCg9Jxq2jAX3ikr02bdj7QJ4kpYM=\\\" PublisherDeviceId=\\\"j2zn9jpt+51yLDbq0aW3inKiKdgT7pJnFKMKiknD/ug=\\\" MicrosoftProductId=\\\"d967606b-c78a-4567-af73-894c8d852f03\\\" MicrosoftAppId=\\\"e84c1075-cd38-4ce2-ad1a-9202ce4bbde4\\\" /><Signature xmlns=\\\"http://www.w3.org/2000/09/xmldsig#\\\"><SignedInfo><CanonicalizationMethod Algorithm=\\\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\\\" /><SignatureMethod Algorithm=\\\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\\\" /><Reference URI=\\\"\\\"><Transforms><Transform Algorithm=\\\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\\\" /></Transforms><DigestMethod Algorithm=\\\"http://www.w3.org/2001/04/xmlenc#sha256\\\" /><DigestValue>lL32xbIYS1hOIZEKHO713Ah3tx+7Z004n1EYBq+Wxng=</DigestValue></Reference></SignedInfo><SignatureValue>ajbOwQ5enxNEZNXazifkjkKiC5rQOyAL5HXIqYgRoq6S2j3cAVytnjT4mQBocmk8I/sUW1sS+xFOuWV4j1S0URrle5mHE5PZVztdodmts2QI0q1/ol1272mqfARtbc1xeY60uVc9zVzvv41GgYiBfXBAMKzN4lVU4Tra23EjyD2jN9HK1+rC1yYSB6gSuV95DqAHj6sy/f2mjEsY007zNC+CmdKtprJiH8NmJhVtDQHNQGMmg3gipige8grVVl+unPfXOF7RI+h9J2O3RGoFuKBWil+dLBkNXAbEpe5l6WSEEV31Gw0oz2NyYSbxiPef6R2ZXWukt/gBtLmRGN7rFw==</SignatureValue></Signature></Receipt>\";\n\niap.setup(function (err) {\n    if (err) {\n        console.error(err);\n    }\n    iap.validate(iap.WINDOWS, windowsReceipt, function (err, windowsRes) {\n        if (err) {\n            console.error(err);\n        }\n        if (iap.isValidated(windowsRes)) {\n            console.info(\"Ok\");\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.36.js":"var iap = require('./');\nvar receipt = {\n\tdata : {\"orderId\":\"GPA.1352-1234-2530-92420\",\"packageName\":\"com.jrtm.TestIAP3\",\"productId\":\"ide\",\"purchaseTime\":1457100623859,\"purchaseState\":0,\"purchaseToken\":\"jpjobppalfgdjgiglkpimfai.AO-J1OxF12taoYOPZMN6EK-uvr-bOqJ-NNSlk2wdFyfCH3EtiBXfm_Vd81cdQX4WP1xKjivx7\"},\n\tsignature : 'Edg4mfzB8/14FDtABNeNfHTiCbWfVO6ANfitBjzQ/E0IAHBTSZF2NvHPuf0kVYjdrj7gfL+jHGq2Nq0AEfV/3dvQuck+750uLMRaeZ0djxeiNLji5VQYyM78q+2mYQrvUIijD0NYQRZdPeoYqjgcZC4ZaaIwH5tbPOE9kBzcfZf0SOo+WxnLSxRLl8C3t/U3UQkMzCjUscMK4DVQPZXohKCCQbenIDs9ey5wBHtK8MeTXuPcTMWixx+demOlEk6P6zG//JqQ7LRdDGvSb/4rkRMctrklUCudRGwqagbNUH84l7e1FBcUjzqtMeLppretXIRg50/eV7YowP8hXDB8JA=='\n};\niap.config({\n\tgooglePublicKeyStrLive: 'MIIBIjANqhkiG98AMIIBCgKCAQEAmhqid8hOo7UZNa9dSsssvmq6LE/+LDc5+hirTuk7ZOqPo4fAqQk045SFulIdrlt+ZWsHjFokmM8zDEpKhIGxLjT/OPEm9so9CC6xYO2HH35sbErDFFr9QxGyGYSaeZBOCrAkjaHn1uCNP0qmPvqz7JHToGEsYoOUNln1JpIuO7xXKKB62hgsQ9KfZQIDAQAB'\n});\n\niap.setup(function (err) {\n    if (err) {\n        console.error('set up++++', err);\n    }\n    iap.validate(iap.GOOGLE, receipt, function (err, res) {\n        if (err) {\n            console.error('error>>>>>>', err);\n        }\n        if (iap.isValidated(res)) {\n            console.info(\"Ok\");\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.38.js":"var iap = require('./');\n\nvar receipt = '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';\n\niap.setup(function (error) {\n\tif (error) {\n\t\treturn console.error('setup failed:', error);\n\t}\n\tiap.validate(iap.APPLE, receipt, function (error, res) {\n\t\tif (error) {\n\t\t\treturn console.error('validation failed:', error);\n\t\t}\n\n\t\tconsole.log('validated:', res);\n\n\t\tif (iap.isValidated(res)) {\n\t\t\tconsole.log('OK');\n\t\t}\n\t});\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.51.js":"var rec = { data: { orderId: 'GPA.1301-1377-8253-29193', packageName: 'com.mcontigo.inshake', productId: 'com.mcontigo.inshake.subscriptionar', purchaseState: 0, purchaseTime: 1463617019341, purchaseToken: 'iddnojaahbiakedmcodcihip.AO-J1OwlghdDQ5UC0f3u1NO8SVDBdECIUVVwbOB9EZ8_TKKsFZM3HTLFrhxRsuN5Q4u-kvWX8-t5LFDBDEG4W1tH_NDkmpFuBBnvBoWZhs63d14SjYa6o-PIh1P-Ku-zb4mPf37PO2HE9OJ0S3fQakXlNGE4_hhDBQ' }, signature: 'FQdBCJexWF7hIlCeeHNhqgnyg+9Hr7YnX5Oh9nG99u/uN/UDuiTXFcK+XppzsV5vDhheGJh5aEqmn5Tdkpu2xjCBcEP67sDwcox4Bqp09yEmYo0yk2TCbhU0civw7jCFUhV6MaCOBnQg3NJd75qKTUw6zfw5DywZPaIYaO+9A3thnasWLtgPdVfVkQfrH7UXVZWbH3gGi/PaYe2n46eUBWxQ0qxzZgsHCFoJ9siyXn580n4MbF/ArF1C3UQ4Fcx/boa4UMGU9+IDtADYJgdNzH1V71990DaapJfkeOfghTWcKvuiwptWHfSun6eDlZ1fV+bQbf1CmHmjpxQyW5Sfaw==' };\n\nvar pub = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmgGOcIrdkEZu8pJ5QJLkWQLjUI4QHBXJSxFE72pIO9+yEaLpA5Vy8VIENIK9CoAEH0SEjJRpBxWvqzLEsZ5LUqsTc4GknBP0TQczMIx4l5xXgiVFRjqZjhNVs5lggK3I8a866bkNEagm+CW8P4xf5w+uXrFLtNjvslMCfLX3J9a32qs3Vbr6jd9yAra999XyHl9yXeyXt83tk928jtDnNNiJXt7stQ+e0srV46o7pDX8JMDI6yI4HMSs09LTpOb0fAyzgB9QXGglHqHyjKBVScYzaLFMNgCjIt4WZ6FD7Ymzo1+S++zy/rQTqiMQ8W7OrwuKa2yPQKriZu2bSDbL0QIDAQAB';\n\nvar iap = require('./');\niap.config({ verbose: true });\niap.setup(function () {\n\tiap.validateOnce(iap.GOOGLE, pub, rec, function () {\n\t\tconsole.log(arguments);\n\t});\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.56.js":"var r = {\"data\":{\"packageName\":\"com.edlifeapp\",\"productId\":\"plus.365\",\"purchaseTime\":1469015574292,\"purchaseState\":0,\"developerPayload\":\"inapp:plus.365:94038a0e-75cd-4ff1-8fd0-b7641d6c9809\",\"purchaseToken\":\"apllonnighbdcbhlnpcifgdm.AO-J1OxDjBnM7W80uIXns5dmR7VDItUGLLXe8Y_HiBhL8Hj8DhRDakP7p6nJ7y5kVUFKrr0UCbJkv8i1JZPkjMY1GQ_EMmuLxusKClZ3eVGn6iiFJ2-iMFM\" },\"signature\":\"OrriuTrGZrNTDL54nGV2g9JD26RQg+scavdxS5OcfBJZYmrOnxL71FUslYCyr04MvHIwJd/6bvd7x3T2oLo/OXjG/EdaV1+OhR7NtG71HMjTsrbKCKs7x4oeS1siqVMRA4oLRkf2201Z2HOOyldT1Par2VsvIS05rK4OKOSIZJY+J7VqjCSRfbohK67KBELMv85Gsl3DyDflYPIOxheshNN8g03YLhj+DOPaPQiQfBbjp/B6A2L+1kdjiKYpBDN4HtO/fGQm3rBSDoh53 BDX1r8cot2BvLR00ZV4MSrRPmFtoUL70VNcWMiC4+x7RcZX3rM7ULLjGAco/H0zSOoLTA==\" };\nvar pub = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnBXCRv2DCEchsOw783WPBCjud/Wf3Mit5s8MACg5LQu1cf3ITtMS0246UVU77t6z71PscfIurWZRkmSvo8MQyF4zjC2npgADMKZLHHfPhLFn3odVqLjbihDrVSD4M9Riqh+r73QBnlKVD/04gK08r6O1q1sCqNqJWSK12EHjaSiIl0tizNuJ3XAqnlhjKk39uomwkcNrN4A/H+E76HiRtftfOsanFbBTSl/Mgxv65X89U69gL9lp2YMv+OZZwMJ75vHrPLxWx7M6d95f9fpOvPtsJ4pHTEakKdT8yf5dwHKGmzODa+xBMk1C9aTK19h5MdT0OQmsjYrF5jKtfETN4QIDAQAB';\n\nvar iap = require('./');\niap.config({\n\tverbose: true,\n\tgooglePublicKeyStrLive: pub\n});\niap.setup(function () {\n\tiap.validate(iap.GOOGLE, r, function (error, res) {\n\t\tconsole.log(error, res);\n\t});\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.65.js":"var iap = require('./');\nvar receipt = {\n\t\"data\": {\n\t\t\"packageName\":\"com.skyredpepper.zzactalkandroid\",\n\t\t\"productId\":\"point_1000\",\n\t\t\"purchaseTime\":1475214245609,\n\t\t\"purchaseState\":0,\n\t\t\"purchaseToken\":\"oddidiboidodlmboahbpfgjg.AO-J1Oz4nr73R6ggq5ITwd1BYQeo7NXNTVehPsAiqeu9AuaEMaXc6OKJomOU85lbtuEGkJsFPeYlQS4Tbc9qluOvEcU1js3n6mC99FuOnpKuhCE-4BPecgSOI28_W_djaNmxIY_2zN_M\"\n\t},\n\t\"signature\":\"fi9QIEpo+NOP37L+oweMiO0tcTVZiMsuu62G7ARgUPeEMO4aoZFAzGLkQzhyi+A45VNvOnTcXvVuwavcpjI7tgGyDUxyKIt6Z9wub3RX1WkizKM9OimMBEZh0yGW883pYqSyDed5ZvJ9nMMeBZ47bEO0HA73h8k405e\\/ambf\\/6zUL6WNs7VeedUdcf\\/g9PESfIK+O64MJ2AXaLifm0DE5bBFYXrT+GMPX5Bv\\/Yi\\/H8eDQGBxAcNTZEo2JaLhlC6YM0DmBSOW1\\/f\\/woiXRH7mJPZNoLOJn+DyZmh4DhyQPz\\/q69yzdIscxertlRnu0OxpCUv98d7fEVtwu5exkxOo9g==\"\n};\niap.config({\n\tverbose: true,\n\tgooglePublicKeyStrLive: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAl01QaHoO+PLyZQE0/qJbxhKyHdBCVxPv+/I1i8wULdYiwhiG1OgSxyC0o8AKD9bTzVOXOd6IPb4cS8gRJUB7WlDIX+dKjQ+9BUL6yXx9gsNooJYCzKAW1/g5iRCjSaZyGzUgAPU2GxXIW3/feRRHwIkMU49Z3II37dx++Fvs6m57nbvcKJOmSOgtNvZtMq/VmDUdUTGcn1DLJiGkeaVeFsDC+kZ1hs4z9Q2Ag6yQfEYSB0gFSkC/VnQTn+ZxUtMDiIYxF44eha3hXQk5AHzn6NoebZI/Ry7vG0Gj+iRo94QcneKkiWXBY6QO0cJiVKtsqa6SaSl7u/4S8eoMzZDEvQIDAQAB'\n});\n\niap.setup(function (err) {\n    if (err) {\n        console.error(err);\n    }\n    iap.validate(iap.GOOGLE, receipt, function (err, res) {\n        if (err) {\n            console.error(err);\n        }\n        if (iap.isValidated(res)) {\n            console.info(\"Ok\");\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.82.js":"var iap = require('./');\nvar receipt = {\n\"data\":{\n\"packageName\":\"com.programize.hirola.muchokids_android\",\n\"productId\":\"test_0\",\n\"purchaseTime\":1490882619612,\n\"purchaseState\":0,\n\"purchaseToken\":\"nppjmgcceoeiomijghpcdbof.AO-J1OyTQl1Kmv4hjCR1RWlCynlqlHn5sIsezwesBBO84RwZpiY2Ig4gPCFoeHKw35v3nWQNHR6FhZIRr_Xw-nos5v0HgKyvfdPFz54B1zwi_FlFlF2PTiWp5_rGEYRBU-H4LJnzyC1B\",\n\"autoRenewing\":true\n}, \"signature\":\"GJvrduu0rIll1CCa2EwfBobNx58PUcH9n70IK6WNDuM5IQX/MhNtt5Z2ywD0pTZlynQcxIXO1N8isIhwQuq0+Z3wk5iMXAmXfbdIjFYtZVTp4zS+EJpPAWpt1n5cAG67MiOqKQ0ZRXvXxZGXHpL5a0ws6UsG7EtPA4SaVozuGdFMfSrqNybpjeLb9mkZ2b0HF5zP+PhgtS78CUAxH78N4dT+w9fm0SOWWVlZiePPEL7ivy0jcoa7Av1htHzRies65iAiByw2q0sbVxm0XeWzQPKioEGTV8FdGp0S5tuIiUzhoW1cdNXjwnQ+g2sV1JR5mjQ3nwVpbCUdpxUHNa7O7g==\"\n};\niap.config({\n\tverbose: true,\n\tgooglePublicKeyStrLive: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgBcv0xfEtGxEXrC8o9/yT3Mu8+l/d1FV9WYTA1IS09i0JJeRsCrtdEf/VhAnt/mCquwKl2+d6WBi8tBYfj7n3LX2L2NDj+yhkWhs3tpDNcULIu5t0+kTyNjffzmb8wCEFJgK3/N9Zota/GVUVazQ4AyvHKB5c9vBBIHUPVds8mGMXYEhh83/AfnIIOoR5LeH0V9bwqgbi11UljcS9OYEvLb+KJzCBtRnXNLO65AoK2/eUlYI2qlOJgziJhNcEqFtRkGWFhOuk+cEYJd6twttZ3TKG9o3z8SdJauP8BJqYUwpiqf0V85+tWI4d67l53q4jvNRni7KFUwfHNdwbDQMnwIDAQAB'\n});\n\niap.setup(function (err) {\n    if (err) {\n        console.error(err);\n    }\n    iap.validate(iap.GOOGLE, receipt, function (err, res) {\n        if (err) {\n            console.error(err);\n        }\n        if (iap.isValidated(res)) {\n            console.info(\"Ok\");\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/issue.js":"var iap = require('./');\nvar receipt = {\n\tdata: \n\t\t{\"packageName\":\"com.utillix.utillixapp1\",\"productId\":\"praveen_test\",\"purchaseTime\":1463582360560,\"purchaseState\":\"0\",\"purchaseToken\":\"ohdbahlifnbfoelidfknfakp.AO-J1OxdAXy9EKF7uJT8Ggg9YUcCvx-Lk7_zZFc4s9eLijoBPvv_uG3i5WDsb8TDIjS6-U-P1Qg-oFMDD7BhzdzXpYSlwld5mkSRr6moW8nG_I4D7TNV1paMGM2esWumQWG-4tbcnsQo\",\"autoRenewing\":false},\n\tsignature: 'UhkS1bqFWD+UK3/3TnQ5/66YnW91FCe0hnSQtqegXb0rGPkAUzpmGq/P/Bh9nD9SE9Cvm22k/VBeI06hcadlusplA4mwtXt9UN9xiSNOSmTnPhi4/NtZdDCFo3nGNrmL3UftEKdoHfAMvQZGUJ9rJGraI7kVku3etEAG16WY2i3Ymg8ZfMD3c0bbgla7zmCKNc/jlvOFRieUxGGGiGyzyvH+HOLHijNZzalqwDc11FfFVnS6estETKj3YvZ+lbR9Dk/bHBZ1Zbme5lmsgTIM9IR4QYSxXnKpvu64MSjcAwiyjgEonxJR8HNFvHDVX2EvVVCHDEi0qXIs48GjLazALQ==' };\n\niap.config({\n\tverbose: true,\n\tgooglePublicKeyStrLive:'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqNUCAUHQltDpsrsos+MajFU3mgffZ8ir6uK/kgkm04ALUgaT1zQsfSnEaHuvjbr96mpwJfZ4N5RWmyB1tHfhzAvHPMTs+IB2rdReMFZ1cc4C3ZVqSf7ADb+44DRuPkHwRg0hJ6+W8zCqh9ULH6WYywfPsWsqtmIoJ7QpUwlfwbMApLJwaf65uEHjh0S4JQH9His5OR76ozxB2sFb6BP/d2mjdHkRjUXKPpI5/oLFWwGpfLkWg0Novozf2ZmwturdMxi/t3+tl3IRSaLYF4DWnlsHwgH36UxC1/xWkHBSoPQuRGI6PddRzhdIWk5kbdiQXpbDVEraPhy0YPofda6tYQIDAQAB'\n});\n\niap.setup(function (err) {\n    if (err) {\n        console.error(err);\n    }\n    iap.validate(iap.GOOGLE, receipt, function (err, windowsRes) {\n        if (err) {\n            console.error(err);\n        }\n        if (iap.isValidated(windowsRes)) {\n            console.info(\"Ok\");\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/m.js":"\nvar iap = require('./');\nvar rec = 'MIITwQYJKoZIhvcNAQcCoIITsjCCE64CAQExCzAJBgUrDgMCGgUAMIIDYgYJKoZIhvcNAQcBoIIDUwSCA08xggNLMAoCAQgCAQEEAhYAMAoCARQCAQEEAgwAMAsCAQECAQEEAwIBADALAgELAgEBBAMCAQAwCwIBDgIBAQQDAgFXMAsCAQ8CAQEEAwIBADALAgEQAgEBBAMCAQAwCwIBGQIBAQQDAgEDMAwCAQoCAQEEBBYCNCswDQIBDQIBAQQFAgMBYFkwDQIBEwIBAQQFDAMxLjAwDgIBCQIBAQQGAgRQMjQ0MBECAQMCAQEECQwHMC4xMC4yNDAYAgEEAgECBBAbUvEBCubhdegjv6ywetcdMBoCAQICAQEEEgwQdXMuZ2FtZWl0LmdhbWVpdDAbAgEAAgEBBBMMEVByb2R1Y3Rpb25TYW5kYm94MBwCAQUCAQEEFM5tk5F//ummUYZbWbijOS3UhuTiMB4CAQwCAQEEFhYUMjAxNi0wMi0xNlQxMjo0NTowMVowHgIBEgIBAQQWFhQyMDEzLTA4LTAxVDA3OjAwOjAwWjBAAgEHAgEBBDjWSdHniDmpga8uk7hajRF4l N7NzQrZr3V5EHmhgtkyRtgyBBSC7v05uPb wHuR Kh2ltdFhFhsjBPAgEGAgEBBEc8Ra3Uve4s 3M31cd2uV 4XI9l3dFp1ThIQoWBNSTUJ2jDtiJc17PzcRpbFnr5Bh9oGbcXJa LxgPzoIKPBcc/HrdPXGExMDCCAU4CARECAQEEggFEMYIBQDALAgIGrAIBAQQCFgAwCwICBq0CAQEEAgwAMAsCAgawAgEBBAIWADALAgIGsgIBAQQCDAAwCwICBrMCAQEEAgwAMAsCAga0AgEBBAIMADALAgIGtQIBAQQCDAAwCwICBrYCAQEEAgwAMAwCAgalAgEBBAMCAQEwDAICBqsCAQEEAwIBATAMAgIGrgIBAQQDAgEAMAwCAgavAgEBBAMCAQAwDAICBrECAQEEAwIBADAUAgIGpgIBAQQLDAl0b2tlbjE1NDAwGwICBqcCAQEEEgwQMTAwMDAwMDE5NDI0MTQ1MTAbAgIGqQIBAQQSDBAxMDAwMDAwMTk0MjQxNDUxMB8CAgaoAgEBBBYWFDIwMTYtMDItMTZUMTI6NDU6MDBaMB8CAgaqAgEBBBYWFDIwMTYtMDItMTZUMTI6NDU6MDBaoIIOZTCCBXwwggRkoAMCAQICCA7rV4fnngmNMA0GCSqGSIb3DQEBBQUAMIGWMQswCQYDVQQGEwJVUzETMBEGA1UECgwKQXBwbGUgSW5jLjEsMCoGA1UECwwjQXBwbGUgV29ybGR3aWRlIERldmVsb3BlciBSZWxhdGlvbnMxRDBCBgNVBAMMO0FwcGxlIFdvcmxkd2lkZSBEZXZlbG9wZXIgUmVsYXRpb25zIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTE1MTExMzAyMTUwOVoXDTIzMDIwNzIxNDg0N1owgYkxNzA1BgNVBAMMLk1hYyBBcHAgU3RvcmUgYW5kIGlUdW5lcyBTdG9yZSBSZWNlaXB0IFNpZ25pbmcxLDAqBgNVBAsMI0FwcGxlIFdvcmxkd2lkZSBEZXZlbG9wZXIgUmVsYXRpb25zMRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKXPgf0looFb1oftI9ozHI7iI8ClxCbLPcaf7EoNVYb/pALXl8o5VG19f7JUGJ3ELFJxjmR7gs6JuknWCOW0iHHPP1tGLsbEHbgDqViiBD4heNXbt9COEo2DTFsqaDeTwvK9HsTSoQxKWFKrEuPt3R YFZA1LcLMEsqNSIH3WHhUa iMMTYfSgYMR1TzN5C4spKJfV khUrhwJzguqS7gpdj9CuTwf0 b8rB9Typj1IawCUKdg7e/pn /8Jr9VterHNRSQhWicxDkMyOgQLQoJe2XLGhaWmHkBBoJiY5uB0Qc7AKXcVz0N92O9gt2Yge4 wHz KO0NP6JlWB7 IDSSMCAwEAAaOCAdcwggHTMD8GCCsGAQUFBwEBBDMwMTAvBggrBgEFBQcwAYYjaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwMy13d2RyMDQwHQYDVR0OBBYEFJGknPzEdrefoIr0TfWPNl3tKwSFMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUiCcXCam2GGCL7Ou69kdZxVJUo7cwggEeBgNVHSAEggEVMIIBETCCAQ0GCiqGSIb3Y2QFBgEwgf4wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ugb24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRhbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmljYXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNgYIKwYBBQUHAgEWKmh0dHA6Ly93d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5LzAOBgNVHQ8BAf8EBAMCB4AwEAYKKoZIhvdjZAYLAQQCBQAwDQYJKoZIhvcNAQEFBQADggEBAA2mG9MuPeNbKwduQpZs0 iMQzCCX Bc0Y2 vQ 9GvwlktuMhcOAWd/j4tcuBRSsDdu2uP78NS58y60Xa45/H R3ubFnlbQTXqYZhnb4WiCV52OMD3P86O3GH66Z GVIXKDgKDrAEDctuaAEOR9zucgF/fLefxoqKm4rAfygIFzZ630npjP49ZjgvkTbsUxn/G4KT8niBqjSl/OnjmtRolqEdWXRFgRi48Ff9Qipz2jZkgDJwYyz I0AZLpYYMB8r491ymm5WyrWHWhumEL1TKc3GZvMOxx6GUPzo22/SGAGDDaSK zeGLUR2i0j0I78oGmcFxuegHs5R0UwYS/HE6gwggQiMIIDCqADAgECAggB3rzEOW2gEDANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwHhcNMTMwMjA3MjE0ODQ3WhcNMjMwMjA3MjE0ODQ3WjCBljELMAkGA1UEBhMCVVMxEzARBgNVBAoMCkFwcGxlIEluYy4xLDAqBgNVBAsMI0FwcGxlIFdvcmxkd2lkZSBEZXZlbG9wZXIgUmVsYXRpb25zMUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMo4VKbLVqrIJDlI6Yzu7F 4fyaRvDRTes58Y4Bhd2RepQcjtjn UC0VVlhwLX7EbsFKhT4v8N6EGqFXya97GP9q hUSSRUIGayq2yoy7ZZjaFIVPYyK7L9rGJXgA6wBfZcFZ84OhZU3au0Jtq5nzVFkn8Zc0bxXbmc1gHY2pIeBbjiP2CsVTnsl2Fq/ToPBjdKT1RpxtWCcnTNOVfkSWAyGuBYNweV3RY1QSLorLeSUheHoxJ3GaKWwo/xnfnC6AllLd0KRObn1zeFM78A7SIym5SFd/Wpqu6cWNWDS5q3zRinJ6MOL6XnAamFnFbLw/eVovGJfbs Z3e8bY/6SZasCAwEAAaOBpjCBozAdBgNVHQ4EFgQUiCcXCam2GGCL7Ou69kdZxVJUo7cwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBQr0GlHlHYJ/vRrjS5ApvdHTX8IXjAuBgNVHR8EJzAlMCOgIaAfhh1odHRwOi8vY3JsLmFwcGxlLmNvbS9yb290LmNybDAOBgNVHQ8BAf8EBAMCAYYwEAYKKoZIhvdjZAYCAQQCBQAwDQYJKoZIhvcNAQEFBQADggEBAE/P71m LPWybC P7hOHMugFNahui33JaQy52Re8dyzUZ L9mm06WVzfgwG9sq4qYXKxr83DRTCPo4MNzh1HtPGTiqN0m6TDmHKHOz6vRQuSVLkyu5AYU2sKThC22R1QbCGAColOV4xrWzw9pv3e9w0jHQtKJoc/upGSTKQZEhltV/V6WId7aIrkhoxK6 JJFKql3VUAqa67SzCu4aCxvCmA5gl35b40ogHKf9ziCuY7uLvsumKV8wVjQYLNDzsdTJWk26v5yZXpT RN5yaZgem8 bQp0gF6ZuEujPYhisX4eOGBrr/TkJ2prfOv/TgalmcwHFGlXOxxioK0bA8MFR8wggS7MIIDo6ADAgECAgECMA0GCSqGSIb3DQEBBQUAMGIxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpBcHBsZSBJbmMuMSYwJAYDVQQLEx1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEWMBQGA1UEAxMNQXBwbGUgUm9vdCBDQTAeFw0wNjA0MjUyMTQwMzZaFw0zNTAyMDkyMTQwMzZaMGIxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpBcHBsZSBJbmMuMSYwJAYDVQQLEx1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEWMBQGA1UEAxMNQXBwbGUgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOSRqQkfkdseR1DrBe1eeYQt6zaiV0xV7IsZid75S2z1B6siMALoGD74UAnTf0GomPnRymacJGsR0KO75Bsqwx VnnoMpEeLW9QWNzPLxA9NzhRp0ckZcvVdDtV/X5vyJQO6VY9NXQ3xZDUjFUsVWR2zlPf2nJ7PULrBWFBnjwi0IPfLrCwgb3C2PwEwjLdDzw dPfMrSSgayP7OtbkO2V4c1ss9tTqt9A8OAJILsSEWLnTVPA3bYharo3GSR1NVwa8vQbP4  NwzeajTEV H0xrUJZBicR0YgsQg0GHM4qBsTBY7FoEMoxos48d3mVz/2deZbxJ2HafMxRloXeUyS0CAwEAAaOCAXowggF2MA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQr0GlHlHYJ/vRrjS5ApvdHTX8IXjAfBgNVHSMEGDAWgBQr0GlHlHYJ/vRrjS5ApvdHTX8IXjCCAREGA1UdIASCAQgwggEEMIIBAAYJKoZIhvdjZAUBMIHyMCoGCCsGAQUFBwIBFh5odHRwczovL3d3dy5hcHBsZS5jb20vYXBwbGVjYS8wgcMGCCsGAQUFBwICMIG2GoGzUmVsaWFuY2Ugb24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRhbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmljYXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wDQYJKoZIhvcNAQEFBQADggEBAFw2mUwteLftjJvc83eb8nbSdzBPwR Fg4UbmT1HN/Kpm0COLNSxkBLYvvRzm 7SZA/LeU802KI  Xj/a8gH7H05g4tTINM4xLG/mk8Ka/8r/FmnBQl8F0BWER5007eLIztHo9VvJOLr0bdw3w9F4SfK8W147ee1Fxeo3H4iNcol1dkP1mvUoiQjEfehrI9zgWDGG1sJL5Ky ERI8GA4nhX1PSZnIIozavcNgs/e66Mv VNqW2TAYzN39zoHLFbr2g8hDtq6cxlPtdk2f8GHVdmnmbkyQvvY1XGefqFStxu9k0IkEirHDx22TZxeY8hLgBdQqorV2uT80AkHN7B1dSExggHLMIIBxwIBATCBozCBljELMAkGA1UEBhMCVVMxEzARBgNVBAoMCkFwcGxlIEluYy4xLDAqBgNVBAsMI0FwcGxlIFdvcmxkd2lkZSBEZXZlbG9wZXIgUmVsYXRpb25zMUQwQgYDVQQDDDtBcHBsZSBXb3JsZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9ucyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eQIIDutXh eeCY0wCQYFKw4DAhoFADANBgkqhkiG9w0BAQEFAASCAQCBRy23DxoDFhKqYYXxdV eHRkitHZ5NjAMjdCcQtrBXoiAPU4JO5ga0A3J7UtE gC/z2VpZfHQ/Trg3EICqsJZIi4tEHSaauB3n5HoMurLYINMsXBQJEIZG8Z4iRahb2lRnTdfp5YfKHRfAP2KBva7iU0ZmLilBeusfeNbYYkaTr1S68R0g3H5kpzQH6zTjD3siNxCTzwSre/p4wsjf84sPlin7Lp2jjC7d9rcxoMPMcCD59PV2s3zFd200hCjEIw5T ndIsthmaBHmyZbR9iHdSgsUXoyVpY27bG AXI6uzDdrlJiWgpq5deGkcg0XA/n9K9fDtZjA1B8jeTC9hz';\n\niap.validate(iap.APPLE, res, function () {});\n","/home/travis/build/npmtest/node-npmtest-in-app-purchase/node_modules/in-app-purchase/lib/request.js":"'use strict';\n\nvar http = require('http');\nvar https = require('https');\n\nmodule.exports = function (options, cb) {\n\tsend(options.method, options, cb);\n};\n\nmodule.exports.post = function (options, cb) {\n\tsend('POST', options, cb);\n};\n\nmodule.exports.put = function (options, cb) {\n\tsend('PUT', options, cb);\n};\n\nmodule.exports.del = function (options, cb) {\n\tsend('DELETE', options, cb);\n};\n\nmodule.exports.patch = function (options, cb) {\n\tsend('PATCH', options, cb);\n};\n\nmodule.exports.get = function (options, cb) {\n\tsend('GET', options, cb);\n};\n\nmodule.exports.head = function (options, cb) {\n\tsend('HEAD', options, cb);\n};\n\nfunction send(method, options, cb) {\n\n\tif (typeof options === 'string')  {\n\t\toptions = {\n\t\t\turl: options,\n\t\t\tbody: null\t\n\t\t};\n\t}\n\n\tvar bodyData = qstring(options.body, options || {});\n\tvar opts = createOptions(method, bodyData, options || {});\n\topts.headers = addHeaders(opts.headers, options || {});\n\tvar proto = opts.port === 443 ? https : http;\n\tvar req = proto.request(opts, function (res) {\n\t\tres.setEncoding('utf8');\n\t\tvar data = '';\n\t\tres.on('data', function (chunk) {\n\t\t\tdata += chunk;\n\t\t});\n\t\tres.on('end', function () {\n\t\t\ttry {\n\t\t\t\tcb(null, res, JSON.parse(data));\n\t\t\t} catch (e) {\n\t\t\t\tcb(null, res, data);\n\t\t\t}\n\t\t});\n\t});\n\treq.on('error', cb);\n\t\n\tif (bodyData) {\n\t\treq.write(bodyData);\n\t}\n\n\treq.end();\n}\n\nfunction qstring(body, options) {\n\t\n\tif (!body) {\n\t\treturn '';\n\t}\n\n\tif (options.json) {\n\t\treturn JSON.stringify(body);\n\t}\n\n\tvar q = [];\n\tfor (var name in body) {\n\t\tq.push(\n\t\t\tencodeURIComponent(name) +\n\t\t\t'=' +\n\t\t\tencodeURIComponent(body[name])\n\t\t);\n\t}\n\treturn q.join('&');\n}\n\nfunction createOptions(method, data, options) {\n\tvar url = options.url;\n\tvar proto = url.substring(0, url.indexOf('://') + 3);\n\tvar noProto = url.replace(proto, '');\n\tvar host = noProto.substring(0, noProto.indexOf('/'));\n\tvar path = noProto.substring(noProto.indexOf('/'));\n\tvar port = options.port || (proto === 'http://' ? 80 : 443);\n\tvar ctype = options.json ? 'application/json' : 'application/x-www-form-urlencoded';\n\tvar opts = {\n\t\thost: host,\n\t\tport: port,\n\t\tpath: path,\n\t\tmethod: method,\n\t\theaders: {\n\t\t\t'Content-Type': ctype,\n\t\t\t'Content-Length': Buffer.byteLength(data)\n\t\t}\n\t};\n\treturn opts;\n}\n\nfunction addHeaders(headers, options) {\n\tvar headersToAdd = options.headers;\n\tif (!headersToAdd) {\n\t\treturn headers;\n\t}\n\tfor (var name in headersToAdd) {\n\t\theaders[name] = headersToAdd[name];\n\t}\n\treturn headers;\n}\n"}